<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WPFStyleLibrary">
    <Style x:Key="Button_Radius_25_Basic"
           TargetType="{x:Type Button}">
        <Setter Property="FontFamily"
                Value="Microsoft YaHei"></Setter>
        <Setter Property="FontSize"
                Value="16"></Setter>
        <Setter Property="Background"
                Value="{StaticResource Color_Background}"></Setter>
        <Setter Property="BorderBrush"
                Value="{StaticResource Color_Border}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true"
                            CornerRadius="25">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Color_Border_MouseOver}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Color_Text_MouseOver}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Color_Border_Pressed}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Color_Text_Pressed}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Background"
                                    Value="{StaticResource Color_Background_Unable}"></Setter>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Color_Border_Unable}" />
                            <Setter Property="BorderThickness"
                                    TargetName="border"
                                    Value="0"></Setter>
                            <Setter Property="TextElement.Foreground"
                                    TargetName="contentPresenter"
                                    Value="{StaticResource Color_Text_Unable}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button_Radius_50_Basic"
           TargetType="{x:Type Button}">
        <Setter Property="FontFamily"
                Value="Microsoft YaHei"></Setter>
        <Setter Property="FontSize"
                Value="16"></Setter>
        <Setter Property="Background"
                Value="{StaticResource Color_Background}"></Setter>
        <Setter Property="BorderBrush"
                Value="{StaticResource Color_Border}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true"
                            CornerRadius="50">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Color_Border_MouseOver}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Color_Text_MouseOver}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Color_Border_Pressed}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Color_Text_Pressed}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Background"
                                    Value="{StaticResource Color_Background_Unable}"></Setter>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Color_Border_Unable}" />
                            <Setter Property="BorderThickness"
                                    TargetName="border"
                                    Value="0"></Setter>
                            <Setter Property="TextElement.Foreground"
                                    TargetName="contentPresenter"
                                    Value="{StaticResource Color_Text_Unable}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button_Radius_75_Basic"
           TargetType="{x:Type Button}">
        <Setter Property="FontFamily"
                Value="Microsoft YaHei"></Setter>
        <Setter Property="FontSize"
                Value="16"></Setter>
        <Setter Property="Background"
                Value="{StaticResource Color_Background}"></Setter>
        <Setter Property="BorderBrush"
                Value="{StaticResource Color_Border}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true"
                            CornerRadius="75">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Color_Border_MouseOver}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Color_Text_MouseOver}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Color_Border_Pressed}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Color_Text_Pressed}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Background"
                                    Value="{StaticResource Color_Background_Unable}"></Setter>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Color_Border_Unable}" />
                            <Setter Property="BorderThickness"
                                    TargetName="border"
                                    Value="0"></Setter>
                            <Setter Property="TextElement.Foreground"
                                    TargetName="contentPresenter"
                                    Value="{StaticResource Color_Text_Unable}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button_Radius_100_Basic"
           TargetType="{x:Type Button}">
        <Setter Property="FontFamily"
                Value="Microsoft YaHei"></Setter>
        <Setter Property="FontSize"
                Value="16"></Setter>
        <Setter Property="Background"
                Value="{StaticResource Color_Background}"></Setter>
        <Setter Property="BorderBrush"
                Value="{StaticResource Color_Border}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="true"
                            CornerRadius="100">
                        <ContentPresenter x:Name="contentPresenter"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Color_Border_MouseOver}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Color_Text_MouseOver}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Color_Border_Pressed}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Color_Text_Pressed}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Background"
                                    Value="{StaticResource Color_Background_Unable}"></Setter>
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Color_Border_Unable}" />
                            <Setter Property="BorderThickness"
                                    TargetName="border"
                                    Value="0"></Setter>
                            <Setter Property="TextElement.Foreground"
                                    TargetName="contentPresenter"
                                    Value="{StaticResource Color_Text_Unable}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button_Menu"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource Button_Radius_25_Basic}">
        <Setter Property="Height"
                Value="50"></Setter>
        <Setter Property="Width"
                Value="300"></Setter>
        <Setter Property="Background"
                Value="{StaticResource Color_Background}"></Setter>
    </Style>
    <Style x:Key="Button_Circle_Large"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource Button_Radius_100_Basic}">
        <Setter Property="Width"
                Value="200"></Setter>
        <Setter Property="Height"
                Value="200"></Setter>
    </Style>
    <Style x:Key="Button_Circle_Medium"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource Button_Radius_100_Basic}">
        <Setter Property="Width"
                Value="100"></Setter>
        <Setter Property="Height"
                Value="100"></Setter>
    </Style>
    <Style x:Key="Button_Circle_Small"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource Button_Radius_100_Basic}">
        <Setter Property="Width"
                Value="50"></Setter>
        <Setter Property="Height"
                Value="50"></Setter>
    </Style>
    <Style x:Key="Button_Circle_XSmall"
           TargetType="{x:Type Button}"
           BasedOn="{StaticResource Button_Radius_100_Basic}">
        <Setter Property="Width"
                Value="38"></Setter>
        <Setter Property="Height"
                Value="38"></Setter>
    </Style>
    <Style x:Key="TextBlock_Basic"
           TargetType="TextBlock">
        <Setter Property="FontFamily"
                Value="Microsoft YaHei"></Setter>
        <Setter Property="FontSize"
                Value="16"></Setter>
        <Setter Property="HorizontalAlignment"
                Value="Center"></Setter>
        <Setter Property="VerticalAlignment"
                Value="Center"></Setter>
        <Setter Property="TextWrapping"
                Value="Wrap"></Setter>
    </Style>
    <Style x:Key="TextBlock_Strong"
           TargetType="TextBlock"
           BasedOn="{StaticResource TextBlock_Basic}">
        <Setter Property="FontWeight"
                Value="Bold"></Setter>
    </Style>
    <Style x:Key="TextBlock_Italic"
           TargetType="TextBlock"
           BasedOn="{StaticResource TextBlock_Basic}">
        <Setter Property="FontStyle"
                Value="Italic"></Setter>
    </Style>
    <Style x:Key="TextBlock_UnderLine"
           TargetType="TextBlock"
           BasedOn="{StaticResource TextBlock_Basic}">
        <Setter Property="TextDecorations"
                Value="Underline"></Setter>
    </Style>
    <Style x:Key="TextBlock_Strong_Italic"
           TargetType="TextBlock"
           BasedOn="{StaticResource TextBlock_Basic}">
        <Setter Property="FontWeight"
                Value="Bold"></Setter>
        <Setter Property="FontStyle"
                Value="Italic"></Setter>
    </Style>
    <Style x:Key="TextBlock_Strong_UnderLine"
           TargetType="TextBlock"
           BasedOn="{StaticResource TextBlock_Basic}">
        <Setter Property="FontWeight"
                Value="Bold"></Setter>
        <Setter Property="TextDecorations"
                Value="Underline"></Setter>
    </Style>
    <Style x:Key="TextBlock_Italic_UnderLine"
           TargetType="TextBlock"
           BasedOn="{StaticResource TextBlock_Basic}">
        <Setter Property="FontStyle"
                Value="Italic"></Setter>
        <Setter Property="TextDecorations"
                Value="Underline"></Setter>
    </Style>
    <Style x:Key="TextBlock_Strong_Italic_UnderLine"
           TargetType="TextBlock"
           BasedOn="{StaticResource TextBlock_Basic}">
        <Setter Property="FontWeight"
                Value="Bold"></Setter>
        <Setter Property="FontStyle"
                Value="Italic"></Setter>
        <Setter Property="TextDecorations"
                Value="Underline"></Setter>
    </Style>
    <Style x:Key="TextBlock_Description"
           TargetType="TextBlock"
           BasedOn="{StaticResource TextBlock_Basic}">
        <Setter Property="Foreground"
                Value="{StaticResource Color_Text_Unable}"></Setter>
    </Style>
    <Style x:Key="TextBlock_Description_Link"
           TargetType="TextBlock"
           BasedOn="{StaticResource TextBlock_Basic}">
        <Setter Property="Foreground"
                Value="{StaticResource Color_Text_Unable}"></Setter>
        <Setter Property="Cursor"
                Value="Hand"></Setter>
    </Style>
    <Style x:Key="TextBox_Basic"
           TargetType="TextBox">
        <Setter Property="FontFamily"
                Value="Microsoft YaHei"></Setter>
        <Setter Property="FontSize"
                Value="16"></Setter>
        <Setter Property="BorderBrush"
                Value="{StaticResource Color_Border}" />
    </Style>
    <Style x:Key="TextBox_Radius_Input"
           TargetType="{x:Type TextBox}"
           BasedOn="{StaticResource TextBox_Basic}">
        <Setter Property="Height"
                Value="50"></Setter>
        <Setter Property="Width"
                Value="300"></Setter>
        <Setter Property="TextAlignment"
                Value="Center"></Setter>
        <Setter Property="VerticalContentAlignment"
                Value="Center"></Setter>
        <Setter Property="TextWrapping"
                Value="NoWrap"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True"
                            CornerRadius="25">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity"
                                    TargetName="border"
                                    Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Color_Border_MouseOver}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Color_Border_Pressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CheckBox_Basic"
           TargetType="{x:Type CheckBox}">
        <Setter Property="Background"
                Value="{StaticResource Color_Background}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource Color_Border}" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="FontSize"
                Value="16"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid x:Name="templateRoot"
                          Background="Transparent"
                          SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="checkBoxBorder"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                Margin="2.5"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Height="16"
                                Width="16">
                            <Grid x:Name="markGrid">
                                <Path x:Name="optionMark"
                                      Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                      Fill="{StaticResource Color_Text}"
                                      Margin="2"
                                      Opacity="0"
                                      Stretch="None" />
                                <Rectangle x:Name="indeterminateMark"
                                           Fill="{StaticResource Color_Text}"
                                           Margin="2"
                                           Opacity="0" />
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter"
                                          Grid.Column="1"
                                          Focusable="False"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent"
                                 Value="true">
                            <Setter Property="Padding"
                                    Value="4,-1,0,0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource Color_Background_MouseOver}" />
                            <Setter Property="BorderBrush"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource Color_Border_MouseOver}" />
                            <Setter Property="Fill"
                                    TargetName="optionMark"
                                    Value="{StaticResource Color_Text_MouseOver}" />
                            <Setter Property="Fill"
                                    TargetName="indeterminateMark"
                                    Value="{StaticResource Color_Text_MouseOver}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Color_Text_MouseOver}"></Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Background"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource Color_Background_Unable}" />
                            <Setter Property="BorderBrush"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource Color_Border_Unable}" />
                            <Setter Property="Fill"
                                    TargetName="optionMark"
                                    Value="{StaticResource Color_Text_Unable}" />
                            <Setter Property="Fill"
                                    TargetName="indeterminateMark"
                                    Value="{StaticResource Color_Text_Unable}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Color_Text_Unable}"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed"
                                 Value="true">
                            <Setter Property="Background"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource Color_Border_Pressed}" />
                            <Setter Property="BorderBrush"
                                    TargetName="checkBoxBorder"
                                    Value="{StaticResource Color_Border_Pressed}" />
                            <Setter Property="Fill"
                                    TargetName="optionMark"
                                    Value="{StaticResource Color_Text_Pressed}" />
                            <Setter Property="Fill"
                                    TargetName="indeterminateMark"
                                    Value="{StaticResource Color_Text_Pressed}" />
                            <Setter Property="Foreground"
                                    Value="{StaticResource Color_Text_Pressed}"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="true">
                            <Setter Property="Opacity"
                                    TargetName="optionMark"
                                    Value="1" />
                            <Setter Property="Opacity"
                                    TargetName="indeterminateMark"
                                    Value="0" />
                        </Trigger>
                        <Trigger Property="IsChecked"
                                 Value="{x:Null}">
                            <Setter Property="Opacity"
                                    TargetName="optionMark"
                                    Value="0" />
                            <Setter Property="Opacity"
                                    TargetName="indeterminateMark"
                                    Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PasswordBox_Basic"
           TargetType="PasswordBox">
        <Setter Property="FontFamily"
                Value="Microsoft YaHei"></Setter>
        <Setter Property="FontSize"
                Value="16"></Setter>
        <Setter Property="PasswordChar"
                Value="●" />
        <Setter Property="Background"
                Value="{DynamicResource Color_Background}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource Color_Border}" />
        <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="None" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="AllowDrop"
                Value="true" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="VerticalFirst" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
    </Style>
    <Style x:Key="PasswordBox_Radius_Input"
           TargetType="{x:Type PasswordBox}"
           BasedOn="{StaticResource PasswordBox_Basic}">
        <Setter Property="Width"
                Value="300" />
        <Setter Property="Height"
                Value="50" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type PasswordBox}">
                    <Border x:Name="border"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True"
                            CornerRadius="25">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter Property="Opacity"
                                    TargetName="border"
                                    Value="0.56" />
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Color_Border_MouseOver}" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused"
                                 Value="true">
                            <Setter Property="BorderBrush"
                                    TargetName="border"
                                    Value="{StaticResource Color_Border_Pressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled"
                               Value="true" />
                    <Condition Property="IsSelectionActive"
                               Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush"
                        Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    



</ResourceDictionary>